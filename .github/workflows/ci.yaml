on: [push, workflow_dispatch]

name: CI

jobs:
  build:
    name: Build check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
 
  clippy:
    name: Lint (clippy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain with clippy available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: clippy

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  rustfmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain with rustfmt available
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: true  # WARNING: only for this example, remove it!
        with:
          command: fmt
          args: --all -- --check

  buildwasm:
    name: Build WASM
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: wasm32-unknown-unknown
      
      - name: Install wasm-bindgen
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: -f wasm-bindgen-cli
          
      - name: Install binaryen
        run: sudo apt-get install binaryen
      
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          
      - name: Run npm install
        run: npm install
      
      - name: Build
        run: chmod +x build.sh && ./build.sh -pWV
      
      - name: Move files for gh pages
        run: mv ./playground/dist dist && mv dist/index.html dist/404.html
      
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: gh-pages
          create_branch: true
